// A1101.cpp :青橙NOIP卷第二题：格子问题
//题目描述：输入三个自然数N，i，j （1<=i<=N，1<=j<=N），输出在一个N*N格的棋盘中，与格子（i，j）同行、同列、同一对角线的所有格子的位置。
//输入：输入共三行，分别输入自然数N，i，j。其中保证N<=24且1<=i<=N，1<=j<=N
//输出共四行。第一行为与格子（i，j）同行的所有格子的位置，第二行为与格子（i，j）同列的所有格子的位置，第三行为从左上到右下对角线上的格子的位置，第四行为从左下到右上对j角线上的格子的位置。
#include "stdafx.h"
#include <iostream>
using namespace std;

int main()
{
	int N, i, j;
	cin >> N >> i >> j;
	//输出与i同行的所有格子的位置
	for (int k = 1; k <= N; ++k)
	{
		cout << "(" << i << "," << k << ")";
	}
	cout << endl;
	//输出与j同列的所有格子的位置
	for (int m = 1; m <= N; ++m)
	{
		cout << "(" << m << "," << j << ")";
	}
	cout << endl;
	//输出从左上到右下的对角线的格子的位置
	if (j>=i)
	{
		for (int n = 1; n <= (N - j + i); ++n)
		{
			cout << "(" << n << "," << (j-i+n) << ")";
		}
	}
	else {
		for (int n = 1; n <= (N - i + j); ++n)
		{
			cout << "(" << (i-j+n) << "," << n << ")";
		}
	}
	cout << endl;
	//输出从左下到右上的对角线的格子的位置
	if (j >= i)
	{
		for (int s = N; s >= (j + i-N);--s)
		{
			cout << "(" << s << "," <<(j+i-s)  << ")";
		}
	}
	else
	{
		int count0 = 0;
		for (int t = i+j-1; t>=1 ; --t)
		{
			cout << "(" << t << "," <<  ++count0 << ")";
		}
	}
    return 0;
}

